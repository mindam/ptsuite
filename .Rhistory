library(plotly)
citation(plotly)
citation("plotly")
browseVignettes("VGAM")
browseVignettes("VGAM")
library(microbenchmark)
citation("microbenchmark")
citation("R")
citation("base")
RStudio.Version()
citation("devtools")
citation("roxygen2")
citation("Rcpp")
print(citation("Rcpp"), bibtex=TRUE)
citation("microbenchmark")
citation("ggplot2")
library(readxl)
Conversion_Data <- read_excel("//mind-nas-drive/mindam/Fat-Tail Research/Conversion Data.xlsx",
sheet = "DailyData")
View(Conversion_Data)
testD <- Conversion_Data$Revenue
str(testD)
summary(testD)
testD <- complete.cases(testD)
summary(testD)
testD <- Conversion_Data$Revenue
testD <- testD[complete.cases(testD)]
summary(testD)
library(ptsuite)
pareto_qq_test(testD)
library(readxl)
Tickets <- read_excel("//mind-nas-drive/mindam/Fat-Tail Research/Conversion Data.xlsx",
sheet = "TicketData")
View(Tickets)
testT<-Tickets$Revenue
testT <- testT[complete.cases(testT)]
summary(testT)
testT <- testT(testT>0)
testT <- testT[testT>0]
pareto_qq_test()
pareto_qq_test(testT)
generate_all_estimates(testT)
pareto_qq_test(testD)
newqq <- function(dat){
sorted_dat <- sort(dat, decreasing = TRUE)
x_axis <- seq(from = 1, to = length(dat))
x_axis <- log( (length(dat) + 1) / x_axis)
y_axis <- sorted_dat
if ("plotly" %in% installed.packages()[, "Package"] == T){
#PLOTLY COMMAND
tmp <- plotly::plot_ly(data.frame(y_axis, x_axis), x = ~ x_axis,
y = ~ y_axis, type = "scatter", mode = "markers",
marker = list(color = "black"))
tmp <- plotly::layout(tmp, xaxis = list(title = "theoretical",
zeroline = FALSE),
yaxis = list(title = "sample", zeroline = FALSE),
title = "<b>QQ Plot</b>")
plotly::layout(tmp, showlegend = FALSE)
}
else{
#PLOT COMMAND
plot(x = x_axis, y = y_axis, pch = 19, xlab = "theoretical",
ylab = "sample", main = "QQ Plot")
print("Install the package plotly in order to obtain the Q-Q plot with
more tools.")
}
}
newqq(testT)
qqplot(qexp(length(testT), rate=1), testT)
qqplot(qexp(500, rate=1), testT)
qqplot(qexp(ppoints(length(testT)), rate=1), testT)
detach("package:ptsuite", unload=TRUE)
remove.packages("ptsuite", lib="~/R/win-library/3.6")
install.packages("D:/Pathum/ptsuite_1.0.0.tar.gz", repos = NULL, type = "source")
library("ptsuite", lib.loc="~/R/win-library/3.6")
summary(Conversion_Data$Revenue)
alpha_hills(Conversion_Data$Revenue)
alpha_mle(Conversion_Data$Revenue)
pareto_qq_test(Conversion_Data$Revenue)
detach("package:ptsuite", unload=TRUE)
remove.packages("ptsuite", lib="~/R/win-library/3.6")
install.packages("D:/Pathum/ptsuite_1.0.0.tar.gz", repos = NULL, type = "source")
library("ptsuite", lib.loc="~/R/win-library/3.6")
pareto_qq_test(Conversion_Data$Revenue)
install.packages("D:/Pathum/ptsuite_1.0.0.tar.gz", repos = NULL, type = "source")
remove.packages("ptsuite", lib="~/R/win-library/3.6")
install.packages("D:/Pathum/ptsuite_1.0.0.tar.gz", repos = NULL, type = "source")
install.packages("D:/Pathum/ptsuite_1.0.0.tar.gz", repos = NULL, type = "source")
library(readxl)
Conversion_Data <- read_excel("//mind-nas-drive/mindam/Fat-Tail Research/Conversion Data.xlsx",
sheet = "DailyData")
View(Conversion_Data)
summary(Conversion_Data$Revenue)
library(ptsuite)
alpha_mle(Conversion_Data$Revenue)
pareto_qq_test(Conversion_Data$Revenue)
detach("package:ptsuite", unload=TRUE)
remove.packages("ptsuite", lib="~/R/win-library/3.6")
install.packages("D:/Pathum/ptsuite_1.0.0.tar.gz", repos = NULL, type = "source")
remove.packages("ptsuite", lib="~/R/win-library/3.6")
install.packages("D:/Pathum/ptsuite_1.0.0.tar.gz", repos = NULL, type = "source")
library(ptsuite)
alpha_mle(c(1,2,NA))
alpha_mle(c(1,2,-2))
install.packages("D:/Pathum/ptsuite_1.0.0.tar.gz", repos = NULL, type = "source")
library(ptsuite)
alpha_mle(c(1,2,NA))
setwd("D:/Pathum/ptsuite")
Rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools::document()
devtools::document()
devtools::build(args = "--compact-vignettes=both")
devtools::check_built("D:/Pathum/ptsuite_1.0.0.tar.gz")
library(readxl)
Final_Data <- read_excel("C:/Users/Asus/Dropbox/Research/Paper 2/Final Data.xlsx",
col_types = c("date", "text", "text",
"numeric"))
View(Final_Data)
View(Final_Data)
library(readxl)
Updated_Data <- read_excel("C:/Users/Asus/Dropbox/Research/Paper 2/Updated Data.xlsx",
col_types = c("text", "text", "text",
"text", "numeric"))
View(Updated_Data)
library(ptsuite)
pareto_test(Updated_Data$`Total Revenue`)
.rs.restartR()
